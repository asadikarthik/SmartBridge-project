version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: learnhub_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: learnhub
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - learnhub-network

  # Redis for session management (optional)
  redis:
    image: redis:7-alpine
    container_name: learnhub_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - learnhub-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: backend
    container_name: learnhub_backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/learnhub?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-for-development
      JWT_EXPIRE: 30d
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - learnhub-network
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: frontend
    container_name: learnhub_frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - learnhub-network
    command: npm run dev

volumes:
  mongodb_data:
  redis_data:

networks:
  learnhub-network:
    driver: bridge
